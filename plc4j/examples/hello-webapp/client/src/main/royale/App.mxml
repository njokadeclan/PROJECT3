<?xml version="1.0" encoding="utf-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
  -->
<j:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:j="library://ns.apache.org/royale/jewel"
               xmlns:js="library://ns.apache.org/royale/basic"
               xmlns:html="library://ns.apache.org/royale/html"
               xmlns:svg="library://ns.apache.org/royale/svg"
               xmlns:service="service.*" 
               initialize="init(event)">

    <j:beads>
        <js:ApplicationDataBinding/>
        <js:ClassAliasBead />
        <js:ContainerDataBinding/>
    </j:beads>

    <fx:Style>
        @namespace "http://www.w3.org/1999/xhtml";

        .bgshape
        {
            background: #00ff00;
        }
        .fgshape
        {
            border: 1px solid #000000;
        }
    </fx:Style>

    <fx:Script>
        <![CDATA[
        import mx.messaging.Consumer;
        import mx.messaging.events.MessageAckEvent;
        import mx.messaging.events.MessageFaultEvent;
        import mx.messaging.events.MessageEvent;
        import mx.messaging.ChannelSet;
        import mx.messaging.channels.AMFChannel;
        import org.apache.royale.events.Event;
        import mx.logging.ILoggingTarget;
        import mx.logging.targets.TraceTarget;
        import mx.logging.LogEventLevel;
        import mx.logging.Log;

        private var consumer:Consumer;
        private var channelSet:ChannelSet;

        private function init(event:Event):void {
            var traceLogger:ILoggingTarget = new TraceTarget();
            traceLogger.filters = [ "mx.rpc.*", "mx.messaging.*" ];
            traceLogger.level = LogEventLevel.ALL;
            Log.addTarget(traceLogger);

            var appurl:String = getApplicationBaseUrl();
            trace("Application url " + appurl);

            channelSet = new ChannelSet();

            // Define the long-polling-channel.
            /*var longPollingChannel:AMFChannel = new AMFChannel("longPollingAmf", appurl + "/messagebroker/long-polling-amf");
            longPollingChannel.pollingEnabled = true;
            longPollingChannel.pollingInterval = 5000;
            longPollingChannel.useSmallMessages = true;
            channelSet.addChannel(longPollingChannel);*/

            // Define a short-polling-channel
            var shortPollingChannel:AMFChannel = new AMFChannel("shortPollingAmf", appurl + "/messagebroker/short-polling-amf");
            shortPollingChannel.pollingEnabled = true;
            shortPollingChannel.pollingInterval = 500;
            shortPollingChannel.useSmallMessages = true;
            channelSet.addChannel(shortPollingChannel);

            // Define a consumer for consuming the server events.
            consumer = new Consumer();
            consumer.destination = "waterLevel";
            consumer.channelSet = channelSet;
            consumer.addEventListener(MessageAckEvent.ACKNOWLEDGE, handleSubscriptionResult);
            consumer.addEventListener(MessageFaultEvent.FAULT, handleSubscriptionFault);
            consumer.addEventListener(MessageFaultEvent.FAULT, onServerFault);
            consumer.addEventListener(MessageEvent.MESSAGE, onServerEvent);

            consumer.subscribe();
        }

        public static function getApplicationBaseUrl():String {
            var appUrl:String = window.location.href;
            appUrl = appUrl.substring(0, appUrl.lastIndexOf("/"));
            return appUrl;
        }

        private function handleSubscriptionResult(event:MessageAckEvent):void {
            trace("handleSubscriptionResult " + event);
        }

        private function handleSubscriptionFault(event:MessageFaultEvent):void {
            trace("handleSubscriptionFault " + event);
        }

        private function onServerEvent(event:MessageEvent):void {
            const waterLevel:int = int(event.message.body);
            bgShape.height = 500 - (500 / 1024 * waterLevel);
            bgShape.y = fgShape.height - bgShape.height;
            trace("Updated Water Level " + waterLevel);
        }

        private function onServerFault(event:MessageFaultEvent):void {
            trace("onServerFault " + event);
        }

        ]]>
    </fx:Script>

    <j:initialView>
        <j:View width="100%" height="100%">
            <j:beads>
                <j:HorizontalCenteredLayout/>
                <j:Paddings padding="50"/>
            </j:beads>

            <j:Card width="460" height="680">
                <j:CardHeader>
                    <html:H3 text="Gas Pressure" className="primary-normal"/>
                </j:CardHeader>
                <j:CardPrimaryContent itemsHorizontalAlign="itemsCentered">
                    <j:Group width="300" height="500">
                        <js:Group localId="bgShape" width="300" height="0" className="bgshape"/>
                        <svg:Path localId="fgShape" width="300" height="500"
                                  data="M300,500L0,500L0,0L300,0L300,500ZM170.591,0.192L128.507,0.192C127.193,0.192 126.128,1.257 126.128,2.571L126.128,5.919C126.128,7.233 127.193,8.299 128.507,8.299L143.241,8.299L143.241,16.046L136.28,16.046L136.28,12.947L131.853,12.947L131.853,28.22C135.122,28.22 133.482,25.705 136.28,24.014C138.266,22.814 140.921,24.014 143.241,24.014L143.241,33.089L126.128,33.089L126.128,42.3C122.539,42.403 118.993,43.051 115.624,44.302C106.804,47.578 99.698,54.745 96.504,63.596C95.235,67.111 94.621,70.811 94.598,74.544L94.598,448.026L90,448.026C88.686,448.026 87.62,449.092 87.62,450.406L87.62,453.753C87.62,455.068 88.686,456.133 90,456.133L94.598,456.133L94.598,494.405C94.598,496.899 96.62,498.921 99.114,498.921L199.985,498.921C202.48,498.921 204.501,496.899 204.501,494.405L204.501,456.133L210,456.133C211.314,456.133 212.38,455.068 212.38,453.753L212.38,450.406C212.38,449.092 211.314,448.026 210,448.026L204.501,448.026L204.501,74.545C204.501,56.972 190.45,42.692 172.972,42.301L172.972,33.09L155.858,33.09L155.858,8.299L170.591,8.299C171.906,8.299 172.971,7.233 172.971,5.919L172.971,2.571C172.971,1.257 171.906,0.192 170.591,0.192Z">
                            <svg:fill>
                                <js:SolidColor color="0xffffff"/>
                            </svg:fill>
                        </svg:Path>
                        <svg:Path width="300" height="500"
                                  data="M170.591,0.192C171.906,0.192 172.971,1.257 172.971,2.571L172.971,5.919C172.971,7.233 171.906,8.299 170.591,8.299L155.858,8.299L155.858,33.09L172.972,33.09L172.972,42.301C190.45,42.692 204.501,56.972 204.501,74.545L204.501,448.026L210,448.026C211.314,448.026 212.38,449.092 212.38,450.406L212.38,453.753C212.38,455.068 211.314,456.133 210,456.133L204.501,456.133L204.501,494.405C204.501,496.899 202.48,498.921 199.985,498.921L99.114,498.921C96.62,498.921 94.598,496.899 94.598,494.405L94.598,456.133L90,456.133C88.686,456.133 87.62,455.068 87.62,453.753L87.62,450.406C87.62,449.092 88.686,448.026 90,448.026L94.598,448.026L94.598,74.544C94.621,70.811 95.235,67.111 96.504,63.596C99.698,54.745 106.804,47.578 115.624,44.302C118.993,43.051 122.539,42.403 126.128,42.3L126.128,33.089L143.241,33.089L143.241,24.014C140.921,24.014 138.266,22.814 136.28,24.014C133.482,25.705 135.122,28.22 131.853,28.22L131.853,12.947L136.28,12.947L136.28,16.046L143.241,16.046L143.241,8.299L128.507,8.299C127.193,8.299 126.128,7.233 126.128,5.919L126.128,2.571C126.128,1.257 127.193,0.192 128.507,0.192L170.591,0.192Z">
                            <svg:stroke>
                                <js:SolidColorStroke color="0x000000" weight="1"/>
                            </svg:stroke>
                        </svg:Path>
                    </j:Group>
                </j:CardPrimaryContent>
            </j:Card>
        </j:View>
    </j:initialView>

</j:Application>
